import os
import asyncio
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("TOKEN")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if not TOKEN:
    raise ValueError("TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º router –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
dp.include_router(router)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def welcome(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì¶ –ö—É—Ä—å–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏")],
            [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å")],
            [KeyboardButton(text="üõµ –°—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º")]
        ],
        resize_keyboard=True
    )
    await message.answer("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zudrason!", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üì¶ –ö—É—Ä—å–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏"
@router.message(lambda message: message.text == "üì¶ –ö—É—Ä—å–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏")
async def order_form(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main())